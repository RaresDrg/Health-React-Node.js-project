{"version":3,"file":"static/js/578.9115ae52.chunk.js","mappings":"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","sources":["components/common/FormButton/FormButton.jsx","components/common/FormButton/FormButton.styled.js","components/RegisterForm/RegisterForm.jsx","components/RegisterForm/RegisterForm.styled.js","pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/RegisterPage.styled.js","assets/backgorunds/desktop-bg-layers/vector-layer.svg","assets/backgorunds/tablet-bg-layers/vector-layer.svg","utils/getBgLayers.js","../node_modules/react-useanimations/lib/visibility/index.js"],"sourcesContent":["const FormButton = ({\n  className: styles,\n  type,\n  text,\n  handlerFunction,\n  isDisabled,\n}) => {\n  return (\n    <button\n      onClick={handlerFunction}\n      type={type}\n      className={styles}\n      disabled={isDisabled}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default FormButton;\n","import styled from \"styled-components\";\nimport FormButton from \"./FormButton\";\n\nconst StyledFormButton = styled(FormButton)`\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  border-radius: 30px;\n  overflow: hidden;\n  position: relative;\n  z-index: 1;\n  transition: all 0.35s ease-in-out;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 0%;\n    height: 100%;\n    transition: all 0.35s ease-in-out;\n    z-index: -1;\n  }\n\n  &:hover:not(:disabled) {\n    transition: all 0.35s ease-in-out;\n    &:before {\n      width: 100%;\n    }\n  }\n\n  &:disabled {\n    background-color: grey;\n    opacity: 0.5;\n    box-shadow: none;\n    cursor: not-allowed;\n    transition: all 0.35s ease-in-out;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 17px;\n  }\n`;\n\nconst CTAButton = styled(StyledFormButton)`\n  padding: 13px 35px;\n  background-color: #fc842d;\n  color: #ffffff;\n  border: 1px solid #e0e0e0;\n  box-shadow: 0px 4px 10px 0px #fc842d80;\n\n  &:before {\n    background-color: #ffffff;\n  }\n\n  &:hover:not(:disabled) {\n    color: #fc842d;\n    border: 1px solid #fc842d;\n    scale: 1.07;\n  }\n\n  &:active:not(:disabled) {\n    scale: 1.1;\n    transition: all 0.35s ease-in-out;\n  }\n\n  @media (min-width: 768px) {\n    padding-top: 16px;\n    padding-bottom: 16px;\n    position: absolute;\n    bottom: -60px;\n    left: 0;\n    width: 190px;\n  }\n\n  @media (min-width: 1280px) {\n    transform: translateX(-50%);\n    left: 50%;\n  }\n`;\n\nconst OrangeButton = styled(StyledFormButton)`\n  width: 182px;\n  height: 44px;\n  background-color: #fc842d;\n  color: #ffffff;\n  border: 1px solid black;\n\n  &:before {\n    background-color: rgba(33, 33, 33, 0.2);\n  }\n\n  &:hover:not(:disabled) {\n    color: blanchedalmond;\n    border: 2px solid #ffffff;\n    box-shadow: 0px 4px 10px 0px #fc842d80;\n    transform: scale(1.1);\n  }\n\n  &:active:not(:disabled) {\n    transform: scale(1.2);\n  }\n`;\nconst WhiteButton = styled(StyledFormButton)`\n  width: 182px;\n  height: 44px;\n  background-color: #ffffff;\n  color: #fc842d;\n  border: 1px solid #fc842d;\n\n  &:before {\n    background-color: rgba(33, 33, 33, 0.3);\n  }\n\n  &:hover:not(:disabled) {\n    color: #ffffff;\n    border: 2px solid #ffffff;\n    box-shadow: 0px 4px 10px 0px #fc842d80;\n    transform: scale(1.1);\n  }\n\n  &:active:not(:disabled) {\n    transform: scale(1.2);\n  }\n`;\n\nexport { CTAButton, OrangeButton, WhiteButton };\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Form, Formik, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport UseAnimations from \"react-useanimations\";\nimport visibility from \"react-useanimations/lib/visibility\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/operations\";\nimport { toast } from \"react-toastify\";\nimport {\n  OrangeButton,\n  WhiteButton,\n} from \"../common/FormButton/FormButton.styled\";\n\nconst RegisterForm = ({ className: styles }) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [passwordIsVisible, setPasswordIsVisible] = useState(false);\n  const [confimPasswordIsVisible, setConfimPasswordIsVisible] = useState(false);\n\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const emailRegex = /^([\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/;\n  const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n\n  const validationSchema = Yup.object({\n    name: Yup.string()\n      .min(3, \"Name must be at least 3 characters\")\n      .max(50, \"Name must be less than 50 characters long\")\n      .required(\"Required *\"),\n    email: Yup.string()\n      .matches(emailRegex, { message: \"Invalid email address\" })\n      .required(\"Required *\"),\n    password: Yup.string()\n      .min(8, \"Password must be at least 8 characters\")\n      .matches(passwordRegex, {\n        message: \"Must include an uppercase, a lowercase and a digit\",\n      })\n      .required(\"Required *\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Password doesn't match\")\n      .required(\"Required *\"),\n  });\n\n  const handleSubmit = (values, formikBag) => {\n    const { name, email, password } = values;\n    const { setSubmitting, setFieldError, resetForm } = formikBag;\n\n    setSubmitting(true);\n\n    dispatch(register({ name, email, password }))\n      .unwrap()\n      .then((value) => {\n        toast.success(value.message);\n        resetForm();\n        navigate(\"/login\");\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      })\n      .catch((error) => {\n        const errorNotification =\n          error?.response?.data?.message || \"Internal server error\";\n        toast.error(errorNotification);\n\n        if (error?.response?.status === 409) {\n          setFieldError(\"email\", \"This email is already used\");\n          document.querySelector(\"form\").scrollIntoView();\n        }\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  return (\n    <div className={styles}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, errors, values }) => (\n          <Form autoComplete=\"off\">\n            <h1>Register</h1>\n\n            <div className={`field ${errors.name ? \"onError\" : \"\"}`}>\n              <label htmlFor=\"nameInput\">Name *</label>\n              <Field\n                autoComplete=\"off\"\n                id=\"nameInput\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Please, enter your name !\"\n              />\n              <div className=\"error\">\n                <ErrorMessage name=\"name\" component=\"span\" />\n              </div>\n            </div>\n\n            <div className={`field ${errors.email ? \"onError\" : \"\"}`}>\n              <label htmlFor=\"emailInput\">Email *</label>\n              <Field\n                autoComplete=\"off\"\n                id=\"emailInput\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Please, enter your email !\"\n              />\n              <div className=\"error\">\n                <ErrorMessage name=\"email\" component=\"span\" />\n              </div>\n            </div>\n\n            <div className={`field ${errors.password ? \"onError\" : \"\"}`}>\n              <label htmlFor=\"passwordInput\">Password *</label>\n              <Field\n                autoComplete=\"off\"\n                id=\"passwordInput\"\n                type={passwordIsVisible ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Please, enter your password !\"\n              />\n              <div className=\"error\">\n                <ErrorMessage name=\"password\" component=\"span\" />\n              </div>\n              {values.password && (\n                <UseAnimations\n                  animation={visibility}\n                  onClick={() => setPasswordIsVisible((prev) => !prev)}\n                  size={30}\n                  className=\"showPassword\"\n                />\n              )}\n            </div>\n\n            <div\n              className={`field ${\n                errors.password || errors.confirmPassword ? \"onError\" : \"\"\n              }`}\n            >\n              <label htmlFor=\"confirmPasswordInput\">Confirm Password *</label>\n              <Field\n                autoComplete=\"off\"\n                id=\"confirmPasswordInput\"\n                type={confimPasswordIsVisible ? \"text\" : \"password\"}\n                name=\"confirmPassword\"\n                placeholder=\"Please, confirm your password !\"\n              />\n              <div className=\"error\">\n                <ErrorMessage name=\"confirmPassword\" component=\"span\" />\n              </div>\n              {values.confirmPassword && (\n                <UseAnimations\n                  animation={visibility}\n                  onClick={() => setConfimPasswordIsVisible((prev) => !prev)}\n                  size={30}\n                  className=\"showPassword\"\n                />\n              )}\n            </div>\n\n            <div className=\"buttonWrapper\">\n              <OrangeButton\n                type={\"submit\"}\n                text={isSubmitting ? \"Loading...\" : \"Register\"}\n                isDisabled={isSubmitting ? true : false}\n              />\n\n              <WhiteButton\n                type=\"button\"\n                text={\"Log in\"}\n                handlerFunction={() => {\n                  window.scrollTo({ top: 0, behavior: \"smooth\" });\n                  navigate(\"/login\");\n                }}\n              />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import styled from \"styled-components\";\nimport RegisterForm from \"./RegisterForm\";\n\nconst StyledRegisterForm = styled(RegisterForm)`\n  & {\n    form {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      & {\n        h1 {\n          text-transform: uppercase;\n          color: #fc842d;\n          font-size: 18px;\n          line-height: 25.2px;\n          text-align: center;\n          letter-spacing: 0.04em;\n          margin-bottom: 30px;\n        }\n\n        div.field {\n          width: 100%;\n          height: 70px;\n          margin-bottom: 15px;\n          position: relative;\n\n          & {\n            label {\n              display: inline-block;\n              line-height: 17px;\n              letter-spacing: 0.04em;\n              transition: all 0.45s ease-in-out;\n              font-size: 14px;\n              font-weight: 400;\n              color: #9b9faa;\n\n              transform: translate(20px, 27px);\n              cursor: pointer;\n\n              & {\n                &:has(+ input:not(:placeholder-shown)),\n                &:has(+ input:focus) {\n                  transform: translate(0, 0);\n                  /* cursor: pointer; */\n                  font-size: 16px;\n                  font-weight: 700;\n                  color: black;\n                  transition: all 0.45s ease-in-out;\n                }\n              }\n            }\n\n            input {\n              width: 100%;\n              appearance: none;\n              border: none;\n              outline: none;\n              background-color: transparent;\n              border-bottom: 1px solid #e0e0e0;\n              font-size: 14px;\n              font-weight: 700;\n              line-height: 17px;\n              letter-spacing: 0.04em;\n              color: black;\n              margin-top: 5px;\n              padding: 5px 40px 5px 20px;\n              transition: all 0.45s ease-in-out;\n              color: #20b602;\n\n              & {\n                &:focus {\n                  border-bottom: 1px solid black;\n                  transition: all 0.45s ease-in-out;\n                }\n\n                &::placeholder {\n                  opacity: 0;\n                  transition: all 0.45s ease-in-out;\n                }\n\n                &:focus::placeholder {\n                  color: #9b9faa;\n                  opacity: 1;\n                  transition: all 0.45s ease-in-out;\n                }\n              }\n            }\n\n            div.error {\n              color: #ff003b;\n              font-style: italic;\n              font-size: 12px;\n              margin-top: 2px;\n              text-transform: lowercase;\n            }\n\n            div.showPassword {\n              position: absolute;\n              bottom: 20px;\n              right: 0;\n            }\n          }\n        }\n\n        div.field.onError {\n          & {\n            input {\n              color: #ff003b;\n            }\n          }\n        }\n\n        div.buttonWrapper {\n          display: flex;\n          flex-direction: column;\n          gap: 20px;\n          margin-top: 40px;\n        }\n      }\n    }\n  }\n\n  @media (min-width: 768px) {\n    & {\n      form {\n        width: 396px;\n\n        & {\n          h1 {\n            font-size: 34px;\n            line-height: 47.6px;\n            margin-bottom: 35px;\n          }\n\n          div.field {\n            margin-bottom: 35px;\n\n            & {\n              label {\n                font-size: 17px;\n\n                & {\n                  &:has(+ input:not(:placeholder-shown)),\n                  &:has(+ input:focus) {\n                    font-size: 20px;\n                  }\n                }\n              }\n\n              input {\n                font-size: 17px;\n              }\n\n              div.error {\n                font-size: 14px;\n              }\n            }\n          }\n\n          div.buttonWrapper {\n            margin-top: 5px;\n            flex-direction: row;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default StyledRegisterForm;\n","import Container from \"../../components/common/Container/Container.styled\";\nimport StyledRegisterForm from \"../../components/RegisterForm/RegisterForm.styled\";\n\nconst RegisterPage = ({ className: styles }) => {\n  return (\n    <section className={styles}>\n      <Container>\n        <StyledRegisterForm />\n      </Container>\n    </section>\n  );\n};\n\nexport default RegisterPage;\n","import styled from \"styled-components\";\nimport RegisterPage from \"./RegisterPage\";\nimport getBgLayer from \"../../utils/getBgLayers\";\n\nconst StyledRegisterPage = styled(RegisterPage)`\n  padding-top: 50px;\n  padding-bottom: 120px;\n\n  @media (min-width: 768px) {\n    padding-top: 100px;\n    padding-bottom: 400px;\n    width: 768px;\n    margin: 0 auto;\n    background-image: url(${getBgLayer(\"tablet\", \"banana\")}),\n      url(${getBgLayer(\"tablet\", \"leaves\")}),\n      url(${getBgLayer(\"tablet\", \"strawberry\")}),\n      url(${getBgLayer(\"tablet\", \"vector\")});\n    background-repeat: no-repeat;\n    background-position: bottom right, bottom left, bottom 170px right 5px,\n      bottom right;\n  }\n\n  @media (min-width: 1280px) {\n    width: 1280px;\n    position: relative;\n    padding-bottom: 140px;\n    padding-top: calc(45px + 85px);\n    background-image: url(${getBgLayer(\"desktop\", \"banana\")}),\n      url(${getBgLayer(\"desktop\", \"leaves\")}),\n      url(${getBgLayer(\"desktop\", \"strawberry\")}),\n      url(${getBgLayer(\"desktop\", \"vector\")});\n    background-repeat: no-repeat;\n    background-position: top right, top -30px left 305px,\n      bottom 40px right -35px, bottom right;\n  }\n`;\n\nexport default StyledRegisterPage;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgVectorLayer(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 603,\n    height: 816,\n    viewBox: \"0 0 603 816\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206 259C51.6 271.8 6 403.667 1.5 468C-8.1 648.4 119.167 775.167 185 816H603V0C603 0 574.5 24.5 570 69C533 262 534.5 291 467.5 300.5C400.5 310 316 249.881 206 259Z\",\n    fill: \"#F0F1F3\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVectorLayer);\nexport default __webpack_public_path__ + \"static/media/vector-layer.252ca4cd3c12609ac3a6bce79989f953.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgVectorLayer(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 521,\n    height: 563,\n    viewBox: \"0 0 521 563\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M188.322 238.052C46.4931 249.816 4.6057 371.017 0.472073 430.147C-8.34633 595.956 108.559 712.469 169.032 750H553V0C553 0 526.82 22.5184 522.687 63.4191C488.699 240.809 490.077 267.463 428.532 276.195C366.987 284.927 289.367 229.67 188.322 238.052Z\",\n    fill: \"#F0F1F3\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVectorLayer);\nexport default __webpack_public_path__ + \"static/media/vector-layer.472d8c07b9f1d601619d84cd5dc72f2b.svg\";\nexport { ForwardRef as ReactComponent };","import bananaLayerOnDesktop from \"../assets/backgorunds/desktop-bg-layers/banana-layer.png\";\nimport leavesLayerOnDesktop from \"../assets/backgorunds/desktop-bg-layers/leaves-layer.png\";\nimport strawberryLayerOnDesktop from \"../assets/backgorunds/desktop-bg-layers/strawberry-layer.png\";\nimport vectorLayerOnDesktop from \"../assets/backgorunds/desktop-bg-layers/vector-layer.svg\";\n\nimport bananaLayerOnTablet from \"../assets/backgorunds/tablet-bg-layers/banana-layer.png\";\nimport leavesLayerOnTablet from \"../assets/backgorunds/tablet-bg-layers/leaves-layer.png\";\nimport strawberryLayerOnTablet from \"../assets/backgorunds/tablet-bg-layers/strawberry-layer.png\";\nimport vectorLayerOnTablet from \"../assets/backgorunds/tablet-bg-layers/vector-layer.svg\";\n\nimport sideBarLayerOnTablet from \"../assets/backgorunds/side-bar/side-bar-layer-tablet.png\";\nimport sideBarLayerOnDesktop from \"../assets/backgorunds/side-bar/side-bar-layer-desktop.png\";\n\nfunction getBgLayer(screen, name) {\n  if (screen === \"desktop\") {\n    if (name === \"banana\") return bananaLayerOnDesktop;\n    if (name === \"leaves\") return leavesLayerOnDesktop;\n    if (name === \"strawberry\") return strawberryLayerOnDesktop;\n    if (name === \"vector\") return vectorLayerOnDesktop;\n    if (name === \"sidebar\") return sideBarLayerOnDesktop;\n  }\n\n  if (screen === \"tablet\") {\n    if (name === \"banana\") return bananaLayerOnTablet;\n    if (name === \"leaves\") return leavesLayerOnTablet;\n    if (name === \"strawberry\") return strawberryLayerOnTablet;\n    if (name === \"vector\") return vectorLayerOnTablet;\n    if (name === \"sidebar\") return sideBarLayerOnTablet;\n  }\n}\n\nexport default getBgLayer;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _visibility = _interopRequireDefault(require(\"./visibility.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = {\n  animationData: _visibility[\"default\"],\n  animationKey: 'visibility'\n};\nexports[\"default\"] = _default;"],"names":["_ref","styles","className","type","text","handlerFunction","isDisabled","_jsx","onClick","disabled","children","StyledFormButton","styled","FormButton","_templateObject","_taggedTemplateLiteral","CTAButton","_templateObject2","OrangeButton","_templateObject3","WhiteButton","_templateObject4","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","passwordIsVisible","setPasswordIsVisible","_useState3","_useState4","confimPasswordIsVisible","setConfimPasswordIsVisible","validationSchema","Yup","name","min","max","required","email","matches","message","password","confirmPassword","oneOf","Formik","initialValues","onSubmit","values","formikBag","setSubmitting","setFieldError","resetForm","register","unwrap","then","value","toast","window","scrollTo","top","behavior","catch","error","_error$response","_error$response$data","_error$response2","errorNotification","response","data","status","document","querySelector","scrollIntoView","finally","_ref2","isSubmitting","errors","_jsxs","Form","autoComplete","concat","htmlFor","Field","id","placeholder","ErrorMessage","component","UseAnimations","animation","visibility","prev","size","RegisterForm","Container","StyledRegisterForm","RegisterPage","getBgLayer","screen","bananaLayerOnDesktop","leavesLayerOnDesktop","strawberryLayerOnDesktop","vectorLayerOnDesktop","sideBarLayerOnDesktop","bananaLayerOnTablet","leavesLayerOnTablet","strawberryLayerOnTablet","vectorLayerOnTablet","sideBarLayerOnTablet","obj","exports","_default","animationData","require","__esModule","animationKey"],"sourceRoot":""}